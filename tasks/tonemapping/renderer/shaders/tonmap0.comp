#version 460



layout(local_size_x = 32, local_size_y = 32) in;

layout(push_constant) uniform params
{
  uvec2 res;
} pushConstant;

layout(binding = 0, rgba8) uniform image2D colorTex;

layout(binding = 1) buffer MaxLuminanceBuffer
{
  uint maxLuminanceBuf;
};


shared uint localMaxLogLum;



void main() {

  ivec2 fragCoord = ivec2(gl_GlobalInvocationID.xy);


  if (fragCoord.x >= pushConstant.res.x || fragCoord.y >= pushConstant.res.y)
  {
    return;
  }

  if (gl_LocalInvocationID.xy == ivec2(0, 0))
  {
    localMaxLogLum = 0;
  }
  memoryBarrierShared();
  barrier();


  vec4 fragColor = imageLoad(colorTex, fragCoord);
  float luminance = 0.3f * fragColor.r + 0.59f * fragColor.g + 0.11f * fragColor.b;
  uint bitFloat = floatBitsToInt(luminance);

  atomicMax(localMaxLogLum, bitFloat);
  memoryBarrierShared();
  barrier();


  if (gl_LocalInvocationID.xy == ivec2(0, 0))
  {
    atomicMax(maxLuminanceBuf, localMaxLogLum);
  }
}