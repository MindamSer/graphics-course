#version 460
#extension VK_EXT_shader_atomic_float : enable



layout(local_size_x = 1, local_size_y = 1) in;

layout(binding = 0) buffer LuminanceHistBuffer
{
  float luminanceHistBuf[];
};



void main() {
  for(int i = 1; i < 256; ++i)
  {
    luminanceHistBuf[i] += luminanceHistBuf[i - 1];
  }
  for(int i = 0; i < 256; ++i)
  {
    luminanceHistBuf[i] += luminanceHistBuf[255];
  }

  // {
  //   imageStore(colorTex, fragCoord, vec4(logLum));
  //   barrier();
  // 
  //   int stride = 1;
  //   float left = 0.f;
  //   float right = 0.f;
  // 
  //   while (stride < pushConstant.res.x)
  //   {
  //     if(fragCoord.x % (stride*2) == 0)
  //     {
  //       left = imageLoad(colorTex, fragCoord).r;
  //       right = imageLoad(colorTex, ivec2(min(fragCoord.x + stride, pushConstant.res.x), fragCoord.y)).r;
  //       imageStore(colorTex, fragCoord, vec4(max(left, right)));
  //     }
  //     else
  //     {
  //       break;
  //     }
  //   
  //     stride *= 2;
  //     barrier();
  //   }
  // 
  //   if(fragCoord.x == 0)
  //   {
  //     stride = 1;
  //     while (stride < pushConstant.res.y)
  //     {
  //       if(fragCoord.y % (stride*2) == 0)
  //       {
  //         left = imageLoad(colorTex, fragCoord).r;
  //         right = imageLoad(colorTex, ivec2(0, min(fragCoord.y + stride, pushConstant.res.y))).r;
  //         imageStore(colorTex, fragCoord, vec4(max(left, right)));
  //       }
  //       else
  //       {
  //         break;
  //       }
  //     
  //       stride *= 2;
  //       barrier();
  //     }
  //   }
  // 
  //   barrier();
  // }
  // 
  // 
  // maxLogLum = imageLoad(colorTex, ivec2(0, 0)).r;
  // float normLogLum = (logLum - minLogLum) / (maxLogLum - minLogLum);
  // int logLumLevel = int(round(normLogLum * 255.0f));
  // atomicAdd(luminanceBuf[logLumLevel], 1);
  // barrier();
  // 
  // 
  // if (fragCoord == ivec2(0,0))
  // {
  //   for (int i = 1; i < 256; ++i)
  //   {
  //     luminanceBuf[i] += luminanceBuf[i-1];
  //   }
  // }
  // barrier();

  // {
  //   barrier();
  //   if(fragCoord.x < 256 )
  //   imageStore(colorTex, fragCoord, vec4(float(luminanceBuf[fragCoord.x]) / float(luminanceBuf[255])));
  //   barrier();
  // }
}